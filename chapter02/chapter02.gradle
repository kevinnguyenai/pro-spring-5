subprojects {
	group 'com.apress.prospring5.ch02'
	apply plugin: 'java'
	apply plugin: 'application'

	application {
		mainClass = "com.apress.prospring5.ch2.HelloWorldSpringDI"
	}

	/*Task that copies all the dependencies under build/libs */
	task copyDependencies(type: Copy) {
		from configurations.implementation
		into 'build/libs'
	}

	task execute(type: JavaExec) {
   		main = project.hasProperty("mainClass") ? getProperty("mainClass") : "com.apress.prospring5.ch2.HelloWorld"
   		classpath = sourceSets.main.runtimeClasspath
	}

	task executeBase(type: JavaExec) {
   		main = "com.apress.prospring5.ch2.HelloWorld"
   		classpath = sourceSets.main.runtimeClasspath
		args project.hasProperty("appArg") ? getProperty("appArg") : "NULL"
	}

	task executeDI(type: JavaExec) {
   		main = "com.apress.prospring5.ch2.HelloWorldSpringDI"
   		classpath = sourceSets.main.runtimeClasspath
	}

	task executeCLI(type: JavaExec) {
   		main = "com.apress.prospring5.ch2.HelloWorldWithCommandLine"
   		classpath = sourceSets.main.runtimeClasspath
		args  project.hasProperty('appArg') ? getProperty('appArg') : "NULL"
	}

	task executeAn(type: JavaExec) {
   		main = "com.apress.prospring5.ch2.annotated.HelloWorldSpringAnnotated"
   		classpath = sourceSets.main.runtimeClasspath
		args  project.hasProperty('appArg') ? getProperty('appArg') : "NULL"
	}

	task executeDe(type: JavaExec) {
   		main = "com.apress.prospring5.ch2.decoupled.HelloWorldDecoupled"
   		classpath = sourceSets.main.runtimeClasspath
		args  project.hasProperty('appArg') ? getProperty('appArg') : "NULL"
	}

	dependencies {
		implementation spring.context, misc.slf4jJcl, misc.logback
		testImplementation tester.junit
	}
}

